nameBag = '/home/nahuel/Dropbox/PosDoc/AC3E/Go1 MPC/Simulaciones/2022-12-09-12-02-11.bag';
% nameBag = '/home/nahuel/Dropbox/PosDoc/AC3E/Go1 MPC/Simulaciones/2023-02-04-21-04-29.bag';

bag          = rosbag(nameBag);
bSel         = select(bag,'Topic','parche_go1');
msgStr       = readMessages(bSel);
analisysData = init_Status();

X = [];
y = [];

numTrain = floor(bSel.NumMessages*0.7); % bSel.NumMessages

for i=1:numTrain
    aux = read_go1_status(msgStr{i}.Data, analisysData, 1);
    aux2 = [aux.IMU.quaternion.x; aux.IMU.quaternion.y; aux.IMU.quaternion.z; aux.IMU.quaternion.w; aux.IMU.gyro.x; aux.IMU.gyro.y; aux.IMU.gyro.z; aux.IMU.accel.x; aux.IMU.accel.y; aux.IMU.accel.z; aux.IMU.temp; aux.IMU.rpy.first; aux.IMU.rpy.second; aux.IMU.rpy.third; ...
            aux.BMS.vol_cell1; aux.BMS.vol_cell2; aux.BMS.vol_cell3; aux.BMS.vol_cell4; aux.BMS.vol_cell5; aux.BMS.vol_cell6; aux.BMS.vol_cell7; aux.BMS.vol_cell8; aux.BMS.vol_cell9; aux.BMS.vol_cell10; ...
            aux.foot_force.foot1; aux.foot_force.foot2; aux.foot_force.foot3; aux.foot_force.foot4; ...
%             aux.foot_forceEst.foot1; aux.foot_forceEst.foot2; aux.foot_forceEst.foot3; aux.foot_forceEst.foot4; ...
            aux.position.x; aux.position.y; aux.position.z; ...
            aux.bodyHeight; ...
            aux.velocity.x; aux.velocity.y; aux.velocity.z; ...
            aux.yawSpeed; ...
            aux.motorState1.q; aux.motorState1.dq; aux.motorState1.tauEst; ... % aux.motorStateX.ddq...
            aux.motorState2.q; aux.motorState2.dq; aux.motorState2.tauEst; ...
            aux.motorState3.q; aux.motorState3.dq; aux.motorState3.tauEst; ...
            aux.motorState4.q; aux.motorState4.dq; aux.motorState4.tauEst; ...
            aux.motorState5.q; aux.motorState5.dq; aux.motorState5.tauEst; ...
            aux.motorState6.q; aux.motorState6.dq; aux.motorState6.tauEst; ...
            aux.motorState7.q; aux.motorState7.dq; aux.motorState7.tauEst; ...
            aux.motorState8.q; aux.motorState8.dq; aux.motorState8.tauEst; ...
            aux.motorState9.q; aux.motorState9.dq; aux.motorState9.tauEst; ...
            aux.motorState10.q; aux.motorState10.dq; aux.motorState10.tauEst; ...
            aux.motorState11.q; aux.motorState11.dq; aux.motorState11.tauEst; ...
            aux.motorState12.q; aux.motorState12.dq; aux.motorState12.tauEst; ...
            aux.footPosition2body.leg1.x; aux.footPosition2body.leg1.y; aux.footPosition2body.leg1.z; ...
            aux.footPosition2body.leg2.x; aux.footPosition2body.leg2.y; aux.footPosition2body.leg2.z; ...
            aux.footPosition2body.leg3.x; aux.footPosition2body.leg3.y; aux.footPosition2body.leg3.z; ...
            aux.footPosition2body.leg4.x; aux.footPosition2body.leg4.y; aux.footPosition2body.leg4.z; ...
            aux.footSpeed2body.leg1.x; aux.footSpeed2body.leg1.y; aux.footSpeed2body.leg1.z; ...
            aux.footSpeed2body.leg2.x; aux.footSpeed2body.leg2.y; aux.footSpeed2body.leg2.z; ...
            aux.footSpeed2body.leg3.x; aux.footSpeed2body.leg3.y; aux.footSpeed2body.leg3.z; ...
            aux.footSpeed2body.leg4.x; aux.footSpeed2body.leg4.y; aux.footSpeed2body.leg4.z; ];
            %
    X = [X, double(aux2)];
    y = [y, -double(aux.BMS.current)];
end

%%
% numTrain = 20;
N           = size(X(:,1),1);
Wk          = sdpvar(N,numTrain,'full');
vk          = sdpvar(numTrain,1,'full');
As          = sdpvar(N,N,'full');
Cs          = sdpvar(1,N);
obj         = 0;
constraints = [];
epsndX      = 10;
k           = 0;

for i=1:numTrain-1
    if norm(X(:,i+1)-X(:,i)) >= epsndX
        constraints = [constraints, X(:,i+1) == As*X(:,i) + Wk(:,i), y(i) == Cs*X(:,i) + vk(i)]; 
        obj         = obj + Wk(:,i)' * Wk(:,i);
        k           = k+1;
    end
end
obj = obj + vk' * vk;
%
opts = sdpsettings('solver','quadprog','quadprog.maxiter',1000,'verbose',1,'showprogress',1, 'warning',1,'debug','on', 'relax',2);
sol = optimize(constraints, obj, opts);
            
A = value(As);
C = value(Cs);

%%
ndX     = [];
yest    = [];
Xest    = [];
nXest   = [];
for i=1:size(X,2)-1
    yest = [yest, C*X(:,i)];
    Xest = [Xest, A*X(:,i)];
    nXest = [nXest, norm(X(:,i+1)-Xest(:,i))];
end
figure; hold on;
plot(y,'r'); plot(yest,'b-.'); grid on;
